version: "2.4"

services: 
  # serverless_plarform:
  #   build: 
  #     context: ./function_server/spike
  #     dockerfile: Dockerfile

  # ui:
  #   build: 
  #     context: ./function_server/client
  #     dockerfile: Dockerfile

  # kvdb:
  #   build:
  #     context: ./libkvdb
  #     dockerfile: Dockerfile

  # api_gateway: 
  #   build: 
  #     context: ...
  #     dockerfile: Dockerfile

  ############# INFRA ############
  
  message_queue:
    image: rabbitmq:3.6-management-alpine
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

  cache_service: 
    image: redis:6.2.3-alpine
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    restart: always
    ports:
      - "6379:6379"
    # volumes:
    #  - $PWD/redis-data:/var/lib/redis
    #  - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

  document_db: 
    image: mongo:4.4.6
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=example
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example

  sql_db: 
    image: postgres:10.4-alpine
    ports: 
      - 5432:5432
    environment: 
      - POSTGRES_USER=example
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=example

  object_storage: 
    image: minio/minio:RELEASE.2021-05-27T22-06-31Z
    restart: always
    # volumes:
    #   - data1-1:/data1
    expose:
      - "9000"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: server /mnt/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

# need a common network